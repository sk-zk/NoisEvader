/* Generated by MyraPad at 01.10.2020 20:27:59 */
using Myra.Graphics2D;
using Myra.Graphics2D.TextureAtlases;
using Myra.Graphics2D.UI;
using Myra.Graphics2D.Brushes;

#if !STRIDE
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
#else
using Stride.Core.Mathematics;
#endif

namespace NoisEvader.UI
{
	partial class Settings: Window
	{
		private void BuildUI()
		{
			GameLabel = new Label("Header");
			GameLabel.Text = "GAME";
			GameLabel.TextColor = Color.White;
			GameLabel.Id = "GameLabel";

			DrawHitbox = new CheckBox();
			DrawHitbox.Text = " Draw player hitbox";
			DrawHitbox.TextColor = Color.White;
			DrawHitbox.ImageWidth = 16;
			DrawHitbox.ImageHeight = 16;
			DrawHitbox.Id = "DrawHitbox";

			ScreenShake = new CheckBox();
			ScreenShake.Text = " Screen Shake on hit";
			ScreenShake.TextColor = Color.White;
			ScreenShake.ImageWidth = 16;
			ScreenShake.ImageHeight = 16;
			ScreenShake.Id = "ScreenShake";

			GraphicsLabel = new Label("Header");
			GraphicsLabel.Text = "VIDEO";
			GraphicsLabel.TextColor = Color.White;
			GraphicsLabel.Margin = new Thickness(0, 15, 0, 5);
			GraphicsLabel.Id = "GraphicsLabel";

			var label1 = new Label();
			label1.Text = "Resolution:";
			label1.TextColor = Color.White;

			Resolution = new ComboBox();
			Resolution.GridColumn = 1;
			Resolution.Id = "Resolution";

			var label2 = new Label();
			label2.Text = "Window mode:";
			label2.TextColor = Color.White;
			label2.GridRow = 1;

			WindowMode = new ComboBox();
			WindowMode.GridColumn = 1;
			WindowMode.GridRow = 1;
			WindowMode.Id = "WindowMode";

			var label3 = new Label();
			label3.Text = "Scale mode:";
			label3.TextColor = Color.White;
			label3.GridRow = 2;

			ScaleMode = new ComboBox();
			ScaleMode.GridColumn = 1;
			ScaleMode.GridRow = 2;
			ScaleMode.Id = "ScaleMode";

			var grid1 = new Grid();
			grid1.ColumnSpacing = 20;
			grid1.RowSpacing = 5;
			grid1.Widgets.Add(label1);
			grid1.Widgets.Add(Resolution);
			grid1.Widgets.Add(label2);
			grid1.Widgets.Add(WindowMode);
			grid1.Widgets.Add(label3);
			grid1.Widgets.Add(ScaleMode);

			Vsync = new CheckBox();
			Vsync.Text = " VSync";
			Vsync.TextColor = Color.White;
			Vsync.ImageWidth = 16;
			Vsync.ImageHeight = 16;
			Vsync.Id = "Vsync";

			ShowFps = new CheckBox();
			ShowFps.Text = " Show FPS";
			ShowFps.TextColor = Color.White;
			ShowFps.ImageWidth = 16;
			ShowFps.ImageHeight = 16;
			ShowFps.Id = "ShowFps";

			DrawOuterRings = new CheckBox();
			DrawOuterRings.Text = " Outer rings";
			DrawOuterRings.TextColor = Color.White;
			DrawOuterRings.ImageWidth = 16;
			DrawOuterRings.ImageHeight = 16;
			DrawOuterRings.Id = "DrawOuterRings";

			DrawGlow = new CheckBox();
			DrawGlow.Text = " Glow effect";
			DrawGlow.TextColor = Color.White;
			DrawGlow.ImageWidth = 16;
			DrawGlow.ImageHeight = 16;
			DrawGlow.Id = "DrawGlow";

			DrawParticles = new CheckBox();
			DrawParticles.Text = " Particles";
			DrawParticles.TextColor = Color.White;
			DrawParticles.ImageWidth = 16;
			DrawParticles.ImageHeight = 16;
			DrawParticles.Id = "DrawParticles";

			StretchyPlayer = new CheckBox();
			StretchyPlayer.Text = " Stretchy cursor";
			StretchyPlayer.TextColor = Color.White;
			StretchyPlayer.ImageWidth = 16;
			StretchyPlayer.ImageHeight = 16;
			StretchyPlayer.Id = "StretchyPlayer";

			AudioLabel = new Label("Header");
			AudioLabel.Text = "AUDIO";
			AudioLabel.TextColor = Color.White;
			AudioLabel.Margin = new Thickness(0, 15, 0, 5);
			AudioLabel.Id = "AudioLabel";

			var label4 = new Label();
			label4.Text = "Volume:";
			label4.TextColor = Color.White;

			MusicVolume = new HorizontalSlider();
			MusicVolume.MinWidth = 100;
			MusicVolume.GridColumn = 1;
			MusicVolume.Id = "MusicVolume";

			MusicVolumeLabel = new Label();
			MusicVolumeLabel.Text = "100";
			MusicVolumeLabel.TextColor = Color.White;
			MusicVolumeLabel.GridColumn = 2;
			MusicVolumeLabel.Id = "MusicVolumeLabel";

			var grid2 = new Grid();
			grid2.ColumnSpacing = 5;
			grid2.RowSpacing = 5;
			grid2.Widgets.Add(label4);
			grid2.Widgets.Add(MusicVolume);
			grid2.Widgets.Add(MusicVolumeLabel);

			var verticalStackPanel1 = new VerticalStackPanel();
			verticalStackPanel1.Spacing = 5;
			verticalStackPanel1.Widgets.Add(GameLabel);
			verticalStackPanel1.Widgets.Add(DrawHitbox);
			verticalStackPanel1.Widgets.Add(ScreenShake);
			verticalStackPanel1.Widgets.Add(GraphicsLabel);
			verticalStackPanel1.Widgets.Add(grid1);
			verticalStackPanel1.Widgets.Add(Vsync);
			verticalStackPanel1.Widgets.Add(ShowFps);
			verticalStackPanel1.Widgets.Add(DrawOuterRings);
			verticalStackPanel1.Widgets.Add(DrawGlow);
			verticalStackPanel1.Widgets.Add(DrawParticles);
			verticalStackPanel1.Widgets.Add(StretchyPlayer);
			verticalStackPanel1.Widgets.Add(AudioLabel);
			verticalStackPanel1.Widgets.Add(grid2);

			var scrollViewer1 = new ScrollViewer();
			scrollViewer1.ShowHorizontalScrollBar = false;
			scrollViewer1.VerticalAlignment = Myra.Graphics2D.UI.VerticalAlignment.Top;
			scrollViewer1.Content = verticalStackPanel1;

			Back = new TextButton();
			Back.Text = "Back";
			Back.TextColor = Color.White;
			Back.MinWidth = 60;
			Back.Padding = new Thickness(5);
			Back.Id = "Back";

			Save = new TextButton();
			Save.Text = "Save";
			Save.TextColor = Color.White;
			Save.MinWidth = 60;
			Save.Padding = new Thickness(5);
			Save.Id = "Save";

			var horizontalStackPanel1 = new HorizontalStackPanel();
			horizontalStackPanel1.Spacing = 5;
			horizontalStackPanel1.HorizontalAlignment = Myra.Graphics2D.UI.HorizontalAlignment.Center;
			horizontalStackPanel1.MinHeight = 10;
			horizontalStackPanel1.Margin = new Thickness(0, 10, 0, 0);
			horizontalStackPanel1.Widgets.Add(Back);
			horizontalStackPanel1.Widgets.Add(Save);

			var verticalStackPanel2 = new VerticalStackPanel();
			verticalStackPanel2.Proportions.Add(new Proportion
			{
				Type = Myra.Graphics2D.UI.ProportionType.Fill,
			});
			verticalStackPanel2.Proportions.Add(new Proportion
			{
				Type = Myra.Graphics2D.UI.ProportionType.Auto,
			});
			verticalStackPanel2.Widgets.Add(scrollViewer1);
			verticalStackPanel2.Widgets.Add(horizontalStackPanel1);

			
			Title = "Settings";
			IsDraggable = false;
			Left = 361;
			Padding = new Thickness(10);
			Content = verticalStackPanel2;
		}

		
		public Label GameLabel;
		public CheckBox DrawHitbox;
		public CheckBox ScreenShake;
		public Label GraphicsLabel;
		public ComboBox Resolution;
		public ComboBox WindowMode;
		public ComboBox ScaleMode;
		public CheckBox Vsync;
		public CheckBox ShowFps;
		public CheckBox DrawOuterRings;
		public CheckBox DrawGlow;
		public CheckBox DrawParticles;
		public CheckBox StretchyPlayer;
		public Label AudioLabel;
		public HorizontalSlider MusicVolume;
		public Label MusicVolumeLabel;
		public TextButton Back;
		public TextButton Save;
	}
}